disabled_rules: # rule identifiers to exclude from running
  - colon
  - comma
  - control_statement
  - trailing_newline
  - trailing_whitespace
  - implicit_getter # swiftlint bug, 25 Jul 2020, https://github.com/realm/SwiftLint/issues/3149
  - valid_ibinspectable # swiftlint bug, 25 Jul 2020, https://github.com/realm/SwiftLint/issues/3098
  - identifier_name
opt_in_rules: # some rules are only opt-in
  - empty_count
  # Find all the available rules by running:
  # swiftlint rules
included:
  # paths to include during linting. `--path` is ignored if present.
  - QRISApp
excluded:
  # paths to ignore during linting. Takes precedence over `included`.
  - Pods
  - ".*Tests\\.swift" # Exclude files with a wildcard
analyzer_rules: # Rules run by `swiftlint analyze` (experimental)
  - explicit_self
# configurable rules can be customized from this configuration file
# binary rules can set their severity level
force_cast: warning # implicitly
force_try:
  severity: warning # explicitly
# rules that have both warning and error levels, can set just the warning level
# implicitly
cyclomatic_complexity:
    ignores_case_statements: true
    warning: 15
line_length:
    warning: 180
    ignores_comments: true
# they can set both implicitly with an array
type_body_length:
  - 300 # warning
  - 400 # error
# or they can set both explicitly
file_length:
  warning: 500
  error: 1200
# naming rules can set warnings/errors for min_length and max_length
# additionally they can set excluded names
type_name:
  min_length: 1 # only warning
  max_length: # warning and error
    warning: 40
    error: 50
  excluded: iPhone # excluded via string
reporter: "xcode" # reporter type (xcode, json, csv, checkstyle, junit, html, emoji, sonarqube, markdown)
